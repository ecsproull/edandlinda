
services:
  goserver:
    build:
      context: ./goserver
    ports:
      - "8080:8080"
    environment:
      - PORT=:8080
      - JWT_SECRET=${JWT_SECRET}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_FROM_EMAIL=ecsproull@outlook.com
      - FRONTEND_URL=${FRONTEND_URL}
      - GO_ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./goserver/DiscoveryDrawings:/app/DiscoveryDrawings

  materialui:
    build:
      context: ./materialui
      args:
        VITE_SERVER_URL: ${VITE_SERVER_URL}
        VITE_MAP_API_KEY: ${VITE_MAP_API_KEY}
        VITE_GEOLOCATION_API_KEY: ${VITE_GEOLOCATION_API_KEY}
    ports:
      - "3000:80"

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./all_databases.sql:/docker-entrypoint-initdb.d/all_databases.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecsproull -d edandlinda"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
